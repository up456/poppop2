name: npm 라이브러리 배포

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # git 커밋을 위해 토큰 추가
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - name: Git 설정
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: 버전 체크 및 업데이트
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          LATEST_VERSION=$(npm view ${{ github.event.repository.name }} version 2>/dev/null || echo "0.0.0")
          
          echo "Current version: $CURRENT_VERSION"
          echo "Latest version: $LATEST_VERSION"
          
          if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
            echo "Incrementing patch version..."
            npm version patch
          elif npm view ${{ github.event.repository.name }}@$CURRENT_VERSION 2>/dev/null; then
            echo "Version $CURRENT_VERSION already exists, incrementing patch version..."
            npm version patch
          else
            echo "Using version from package.json: $CURRENT_VERSION"
            # package.json의 현재 버전으로 git 태그 생성
            git tag "v$CURRENT_VERSION"
          fi
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "Version to publish: $NEW_VERSION"
          
          # 변경사항 커밋 및 푸시
          git push
          git push --tags
      - run: npm ci
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
